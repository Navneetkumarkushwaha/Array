class Solution:
    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -> int:
        n=len(nums)
        
        if n==0  or k==0:
            return 0
        
        p=1
        
        start=0
        end=0
        count=0
        
        while end<n:
            
            p=p*nums[end]
            
            while start<=end and p>=k:
                p = p//nums[start]
                start += 1
                
            if p<k:
                count += (end-start+1)
                
            end += 1
            
        return count
        
